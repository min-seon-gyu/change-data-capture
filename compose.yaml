services:
  mysql:
    command:
      - '--server-id=1'
      - '--binlog-format=ROW'
      - '--log-bin=mysql-bin'
      - '--binlog_row_image=FULL'
      - '--gtid-mode=ON'
      - '--enforce-gtid-consistency=ON'
    image: mysql:8.0
    container_name: cdc_mysql
    environment:
      - 'MYSQL_DATABASE=example'
      - 'MYSQL_PASSWORD=secret'
      - 'MYSQL_ROOT_PASSWORD=verysecret'
      - 'MYSQL_USER=spring'
    ports:
      - '13306:3306'
  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: cdc_kafka
    ports:
      - "9092:9092"
    environment:
      # --- KRaft 모드 핵심 설정 ---
      # 클러스터 ID (직접 생성하거나 임의의 값을 사용)
      CLUSTER_ID: 'MQ0s-y-pS4q0i--e-fAabA'
      # 역할: broker와 controller 역할을 모두 수행
      KAFKA_PROCESS_ROLES: 'broker,controller'
      # 노드 ID
      KAFKA_NODE_ID: 1
      # 컨트롤러 쿼럼 투표자 설정 (노드 ID@호스트:컨트롤러포트)
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      # 컨트롤러 리스너 설정
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      # --- 리스너 설정 ---
      # 사용할 리스너들의 프로토콜을 매핑합니다.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      # Kafka가 수신 대기할 모든 네트워크 주소 목록입니다.
      # PLAINTEXT: 다른 Docker 컨테이너가 내부적으로 접속하는 주소
      # PLAINTEXT_HOST: Docker 외부(PC)에서 접속하는 주소
      # CONTROLLER: 컨트롤러끼리 통신하는 주소
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093'
      # 외부 클라이언트에게 알려줄 Kafka 접속 주소 목록입니다.
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      # --- 기타 설정 ---
      # (필수) 내부 오프셋 토픽의 복제본 수를 1로 설정합니다 (브로커가 1대이므로).
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # (선택) 소비자 그룹의 초기 리밸런싱 대기 시간을 없애 빠른 테스트를 돕습니다.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # (필수) 트랜잭션 로그의 최소 쓰기 성공 기준을 1로 설정합니다 (브로커가 1대이므로).
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # (필수) 트랜잭션 로그 토픽의 복제본 수를 1로 설정합니다 (브로커가 1대이므로).
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
  connect:
    image: debezium/connect:2.5
    container_name: cdc_connect
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - mysql
    environment:
      # Debezium이 이벤트를 전송할 Kafka 브로커의 접속 주소입니다.
      BOOTSTRAP_SERVERS: 'kafka:29092'
      # 여러 Connect 컨테이너(워커)를 하나의 클러스터로 묶는 그룹 ID입니다.
      GROUP_ID: 1
      # 생성된 커넥터들의 설정 정보(임무 목록)를 저장할 Kafka 토픽 이름입니다.
      # Connect가 재시작되어도 이 토픽을 읽어 임무를 복원합니다.
      CONFIG_STORAGE_TOPIC: my_connect_configs
      # 커넥터가 어디까지 데이터를 처리했는지 위치(오프셋)를 저장할 토픽 이름입니다.
      # 장애 발생 시 이 토픽을 읽어 정확한 위치부터 작업을 재개합니다. (데이터 유실/중복 방지)
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      # 커넥터와 하위 작업(태스크)의 상태(실행 중, 실패 등)를 저장할 토픽 이름입니다.
      STATUS_STORAGE_TOPIC: my_connect_statuses

volumes:
  kafka_data:
